package dyvil.function

import	java.util.concurrent.Callable

@JavaName("Runnables")
extension Runnable {
	static func apply(f: -> void) implicit -> Runnable = => f()
}

@JavaName("Callables")
extension Callable {
	static func apply<type T>(f: -> T) implicit -> Callable<T> = => f()
}

//@JavaName("Threads")
//extension Thread {
//	static func apply(f: -> void) -> Thread = new Thread() {
//		override func run() -> void = f()
//	}
//
//	static func apply(named name: String, f: -> void) -> Thread = new Thread() {
//		override func run() -> void = f()
//	}
//}
