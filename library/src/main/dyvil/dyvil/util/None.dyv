package dyvil.util

import java.util.NoSuchElementException

public object None implements Option<none> {
	static func apply() -> None = None

	// Accessors

	override func get() -> none = throw new NoSuchElementException

	override func isPresent() -> boolean = false

	override func forEach(action: none -> void) -> void {}

	override func filter(predicate: none -> boolean) -> Option<none> = None

	override func map<U>(mapper: none -> U) -> Option<U> = None

	override func flatMap<U>(mapper: none -> Option<U>) -> Option<U> = None

	@OverloadPriority
	override func orElse<U>(value: U) -> U = value

	override func orElse<U>(supplier: -> U) -> U = supplier()
}
