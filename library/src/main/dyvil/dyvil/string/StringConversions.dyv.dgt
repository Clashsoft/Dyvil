package dyvil.string

abstract class StringConversions
{
	private init() {} // no instances

	postfix func toBoolean(_ string: String) -> boolean = Boolean.parseBoolean(string)

	// Number Conversions
	#for (spec <- LibraryGenConstants.NUMBER_SPECS) {
		#let(TYPE_NAME = spec['TYPE_NAME'])
		#let(PRIMITIVE = spec['PRIMITIVE'])
		#let(WRAPPER = spec['WRAPPER'])

		postfix func to#(TYPE_NAME)(_ string: String) -> PRIMITIVE? = string.to#(TYPE_NAME)(radix: 10)

		infix func to#(TYPE_NAME)(_ string: String, radix: int) -> PRIMITIVE?
		{
			try { return WRAPPER.parse#(TYPE_NAME)(string) } catch (ex: NumberFormatException) {}
			return null
		}
	}
}
