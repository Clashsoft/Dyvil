package dyvil.string

abstract class StringConversions
{
	private init() {} // no instances

	final extension func toBoolean(this: String) -> boolean = Boolean.parseBoolean(this)

	// Number Conversions
	#for (spec <- LibraryGenConstants.NUMBER_SPECS) {
		#let(TYPE_NAME = spec['TYPE_NAME'])
		#let(PRIMITIVE = spec['PRIMITIVE'])
		#let(WRAPPER = spec['WRAPPER'])

		final extension func to#(TYPE_NAME)(this: String) -> PRIMITIVE? = this.to#(TYPE_NAME)(radix: 10)

		final extension func to#(TYPE_NAME)(this: String, radix: int) -> PRIMITIVE? {
			try { return WRAPPER.parse#(TYPE_NAME)(this) } catch ex: NumberFormatException {}
			return null
		}
	}
}
