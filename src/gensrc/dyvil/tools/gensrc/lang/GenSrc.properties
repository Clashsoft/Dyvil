# Specialization Markers

spec.problems=Problems in specialization '%s' (%s):
spec.file.error=Failed to read specialization file '%s'
spec.unassociated=Invalid Specialization - Could not find associated template '%s'
spec.inheritFrom.unresolved=Invalid @inheritFrom property - Could not resolve specialization '%s'
spec.fileName.missing=Invalid Specialization - Missing @fileName property

# Template Markers

template.directory.error=Could not create parent directory '%s'
template.file.error=Failed to read template file '%s'
template.specialized=Generated %d specializations for template '%s'
template.specialize.error=Failed to write specialized template file '%s'
template.problems=Problems in template '%s':
template.problems.for_spec=Problems in template '%s', for specialization '%s':

# Directive Markers

directive.identifier=Invalid Directive - Identifier expected
directive.close_paren=Invalid Directive Argument List - ')' expected

var.identifier=Invalid Variable Directive - Identifier expected
var.close_paren=Invalid Variable Directive - ')' expected
define.name=Invalid Define Directive - Missing Name
undefine.name=Invalid Undefine Directive - Missing Name
undefine.body=Undefine Directives must not have a body

for.open_paren=Invalid For Directive - '(' expected
for.identifier=Invalid For Directive - Identifier expected
for.arrow_left=Invalid For Directive - '<-' expected
for.close_paren=Invalid For Directive - ')' expected
for.open_brace=Invalid For Directive - '{' expected
for.close_brace=Invalid For Directive - '}' expected

if.open_paren=Invalid If Directive - '(' expected
if.close_paren=Invalid If Directive - ')' expected
if.open_brace=Invalid If Directive - '{' expected
if.close_brace=Invalid If Directive - '}' expected
if.else.open_brace=Invalid Else Directive - '{' expected
if.else.close_brace=Invalid Else Directive - '}' expected

import.spec.resolve=Could not resolve specialization '%s'
include.file.not_found=Could not find file '%s'
include.file.directory=The directory '%s' cannot be included, only regular files are allowed

scope.arguments=Invalid Scope Directive - only one Argument can be specified

# Expression Markers

expression.list.close_bracket=Invalid List Literal - ']' expected

# Misc.

genNotice=GENERATED SOURCE - DO NOT EDIT
