package dyvil.tools.dpf.ast.value;

import dyvil.tools.dpf.visitor.ValueVisitor;
import dyvilx.tools.parsing.ASTNode;
import dyvilx.tools.parsing.lexer.LexerUtil;

case class StringValue(protected let value: String) implements Constant
{
	override func accept(visitor: ValueVisitor) -> void = visitor.visitString(this.value)

	override func toObject() -> Object = this.value

	override func appendString(builder: StringBuilder) -> void = builder.append(this.value)

	override func toString() -> String = String(this)

	override func toString(indent: String, buffer: StringBuilder) -> void = LexerUtil.appendStringLiteral(this.value, buffer)
}
