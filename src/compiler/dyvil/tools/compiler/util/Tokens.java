package dyvil.tools.compiler.util;

public interface Tokens
{
	// IDENTIFIERS
	int	MOD_LETTER				= 0x00010000;
	int	MOD_SYMBOL				= 0x00020000;
	int	MOD_DOTS				= 0x00040000;
	
	int	IDENTIFIER				= 0x00000001;
	int	LETTER_IDENTIFIER		= IDENTIFIER | MOD_LETTER;
	int	SYMBOL_IDENTIFIER		= IDENTIFIER | MOD_SYMBOL;
	
	// KEYWORDS
	int	KEYWORD					= 0x00000002;
	
	int	NULL					= KEYWORD | 0x00010000;
	int	TRUE					= KEYWORD | 0x00020000;
	int	FALSE					= KEYWORD | 0x00030000;
	int	THIS					= KEYWORD | 0x00040000;
	int	SUPER					= KEYWORD | 0x00050000;
	int	NEW						= KEYWORD | 0x00060000;
	int	RETURN					= KEYWORD | 0x00070000;
	int	IF						= KEYWORD | 0x00080000;
	int	ELSE					= KEYWORD | 0x00090000;
	int	WHILE					= KEYWORD | 0x000A0000;
	int	DO						= KEYWORD | 0x000B0000;
	int	FOR						= KEYWORD | 0x000C0000;
	int	BREAK					= KEYWORD | 0x000D0000;
	int	CONTINUE				= KEYWORD | 0x000E0000;
	int	GOTO					= KEYWORD | 0x000F0000;
	int	CASE					= KEYWORD | 0x00100000;
	int	TRY						= KEYWORD | 0x00110000;
	int	CATCH					= KEYWORD | 0x00120000;
	int	FINALLY					= KEYWORD | 0x00130000;
	int	THROW					= KEYWORD | 0x00140000;
	int	SYNCHRONIZED			= KEYWORD | 0x00150000;
	
	// SYMBOLS
	int	SYMBOL					= 0x00000004;
	int	DOT						= SYMBOL | 0x00010000;
	int	COLON					= SYMBOL | 0x00020000;
	int	SEMICOLON				= SYMBOL | 0x00030000;
	int	COMMA					= SYMBOL | 0x00040000;
	int	EQUALS					= SYMBOL | 0x00050000;
	int	HASH					= SYMBOL | 0x00060000;
	int	WILDCARD				= SYMBOL | 0x00070000;
	int	ARROW_OPERATOR			= SYMBOL | 0x00080000;
	
	// BRACKETS
	int	BRACKET					= 0x00000008;
	
	int	PARENTHESIS				= BRACKET | 0x00010000;
	int	SQUARE					= BRACKET | 0x00020000;
	int	CURLY					= BRACKET | 0x00040000;
	
	int	OPEN					= 0x00000000;
	int	CLOSE					= 0x00100000;
	
	int	OPEN_BRACKET			= BRACKET | OPEN;
	int	CLOSE_BRACKET			= BRACKET | CLOSE;
	int	OPEN_PARENTHESIS		= PARENTHESIS | OPEN;
	int	CLOSE_PARENTHESIS		= PARENTHESIS | CLOSE;
	int	OPEN_SQUARE_BRACKET		= SQUARE | OPEN;
	int	CLOSE_SQUARE_BRACKET	= SQUARE | CLOSE;
	int	OPEN_CURLY_BRACKET		= CURLY | OPEN;
	int	CLOSE_CURLY_BRACKET		= CURLY | CLOSE;
	
	// NUMBERS
	int	INT						= 0x00000010;
	int	LONG					= 0x00000020;
	int	FLOAT					= 0x00000040;
	int	DOUBLE					= 0x00000080;
	
	int	MOD_DEC					= 0x00000000;
	int	MOD_BIN					= 0x00010000;
	int	MOD_OCT					= 0x00020000;
	int	MOD_HEX					= MOD_BIN | MOD_OCT;
	
	// STRINGS
	int	STRING					= 0x00000100;
	int	STRING_2				= 0x00000200;
	int	CHAR					= 0x00000400;
	
	// COMMENTS
	int	MOD_LINE				= 0x00010000;
	int	MOD_BLOCK				= 0x00020000;
	
	int	COMMENT					= 0x00001000;
	int	LINE_COMMENT			= COMMENT | 0x00010000;
	int	BLOCK_COMMENT			= COMMENT | 0x00020000;
}
