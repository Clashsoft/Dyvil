package.missing=Missing Package Declaration
package.invalid=Invalid Package Declaration
package.default=Invalid Package Declaration in default package

import.wildcard=Invalid Wildcard import
import.using=Invalid static import: The import has to be a member

access.type.invisible=The type '%s' cannot be accessed because it is not visible
access.type.sealed=The sealed class '%s' cannot be accessed because it is private to it's library
access.type.deprecated=The class '%s' is deprecated

access.method.invisible=The method '%s' cannot be accessed because it is not visible
access.method.sealed=The sealed method '%s' cannot be accessed because it is private to it's library
access.method.static=The static method '%s' should be accessed in a static way
access.method.instance=The instance method '%s' cannot be accessed from a static context
access.method.unqualified=The instance method '%s' should be qualified with 'this'
access.method.deprecated=The method '%s' is deprecated
access.method.infix_type=The infix method argument for '%s' is incompatible with the required type
access.method.prefix_type=The prefix method argument for '%s' is incompatible with the required type
access.method.argument_type=The method argument for '%s' is incompatible with the required type

access.assign_call.type=The return type of method '%1$s' is incompatible with the type of the assigned field '%2$s'
access.assign_call.update=The 'update' method for the assignment call value could not be resolved

access.field.invisible=The field '%s' cannot be accessed because it is not visible
access.field.sealed=The sealed field '%s' cannot be accessed because it is private to it's library
access.field.static=The static field '%s' should be accessed in a static way
access.field.instance=The instance field '%s' cannot be accessed from a static context
access.field.unqualified=The instance field '%s' should be qualified with 'this'
access.field.deprecated=The field '%s' is deprecated

access.constructor.invisible=The constructor for '%s' cannot be accessed because it is not visible
access.constructor.sealed=The sealed constructor for '%s' cannot be accessed because it is private to it's library
access.constructor.deprecated=The constructor for '%s' is deprecated
access.constructor.arraylength_type=The array length parameter has to be of type int

access.assign.this=Cannot assign a value to 'this'
access.assign.super=Cannot assign a value to 'super'
access.assign.type=The type of assigned value is incompatible with the type of the assigned field '%s'

access.this.static='this' cannot be accessed in a static context
access.super.static='super' cannot be accessed in a static context
access.super.type='super' cannot be accessed: The enclosing type does not have a super type

resolve.any='%s' could not be resolved to a type, method or field
resolve.package='%s' could not be resolved to a package or class
resolve.type='%s' could not be resolved to a type
resolve.method='%s' could not be resolved to a method
resolve.field='%s' could not be resolved to a field
resolve.method_field='%s' could not be resolved to a method or field
resolve.constructor=The constructor for '%s' could not be resolved
resolve.label='%s' could not be resolved to a label

constructor.interface=The interface '%s' cannot be instantiated
constructor.abstract=The abstract class '%s' cannot be instantiated
constructor.type=The constructor must not return a result

class.extend.type=The %1$s '%2$s' cannot be extended, only classes are allowed
class.extend.final=The final class '%s' cannot be extended
class.extend.deprecated=The extended class '%s' is deprecated
class.implement.type=The %1$s '%2$s' cannot be implemented, only interfaces are allowed
class.implement.deprecated=The interface '%s' is deprecated
class.object.constructor=The object class '%s' cannot have a constructor

annotation.type=The type '%s' is not an annotation type
annotation.target=The annotation type '%s' is not applicable for the target
annotation.method='%2$s' could not be resolved to an annotation interface method for '%1$s'
annotation.constant=The value for '%s' has to be a constant expression
annotation.type=The value for '%s' is incompatible with the required type

array.element.type=The array element type is incompatible with the array type
lambda.method=The Lambda Expression could not be linked to a functional method

field.type=The value of the field '%s' is incompatible with the field type
variable.type=The value of the variable '%s' is incompatible with the variable type
parameter.type=The default value of the parameter '%s' is incompatible with the parameter type

method.type=The expression type of '%s' is incompatible with the return type
method.override=The method '%s' must override or implement a supertype method
method.overrides=The method '%s' overrides a method, but does not have an 'override' modifier
method.override.final=The method '%s' cannot override a final method
method.override.type=The return type of '%s' is incompatible with the overridden method type
method.static=The method '%s' is declared static, but does not have an implementation
method.unimplemented=The method '%s' is not implemented, but does not have an abstract modifier

property.empty=The property '%s' does not have a getter or a setter
property.getter.type=The getter value of the property '%s' is incompatible with the property type
property.setter.type=The setter value of the property '%s' has to be of type void

generic.upperbound=Only one generic upper bound of '%s' can be a class
generic.not_generic='%s' is not a generic type
generic.count=Invalid number of generic type arguments
generic.type=The generic type argument is incompatible with the type variable '%s'

cast.primitive=Cannot cast from a primitive to a reference type
cast.reference=Cannot cast from a reference to a primitive type
cast.unnecessary=Unnecessary cast: The value is already of the casted type
instanceof.primitive='instanceof' cannot be performed on a primitive type
instanceof.unnecessary=Unnecessary 'instanceof': The 'instanceof' operation always returns 'true'

pattern.type=The type of the pattern is incompatible with the matched value type
pattern.dead=Unreachable Pattern
case.invalid=Invalid Case Statement - Invalid Expression

if.condition.type=The condition of an if Statement has to evaluate to a boolean value
if.condition.invalid=Invalid if Condition
while.condition.type=The condition of a while Statement has to evaluate to a boolean value
while.condition.invalid=Invalid while Condition
do.condition.type=The condition of a do-while Statement has to evaluate to a boolean value
do.condition.invalid=Invalid do-while Condition
for.condition.type=The condition of a for Statement has to evaluate to a boolean value
for.array.type=The type of the iterated array is incompatible with the variable type
for.array.statement=The array iteration loop requires a statement
for.iterator.type=The type of the iterator is incompatible with the variable type

break.invalid=Invalid break Statement: break cannot be applied in the current context
break.invalid.type=Invalid break Statement: The statement labeled '%s' is not a loop
continue.invalid=Invalid continue Statement: continue cannot be applied in the current context
continue.invalid.type=Invalid continue Statement: The statement labeled '%s' is not a loop
goto.invalid=Invalid goto Statement: goto cannot be applied in the current context
goto.warning=goto should not be used

return.type=The returning type of the block is incompatible with the required type

# DWT Markers

dwt.component.type='%1$s' ($2$s) could not be resolved to a component type
dwt.property.unknown='%1$s' could not be resolved to a property of component type %2$s

# Marker types.

marker.access.type.deprecated=warning
marker.access.method.unqualified=warning
marker.access.method.static=warning
marker.access.method.deprecated=warning
marker.access.field.unqualified=warning
marker.access.field.static=warning
marker.access.field.deprecated=warning
marker.access.constructor.deprecated=warning

marker.class.extend.deprecated=warning
marker.class.implement.deprecated=warning
marker.method.overrides=warning
marker.cast.unnecessary=warning
marker.instanceof.unnecessary=warning

marker.goto.warning=ignore

marker.dwt.property.unknown=warning
