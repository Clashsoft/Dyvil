type=Double
primitive=double
wrapper=Double

loadInsn=DALOAD
storeInsn=DASTORE

fromLiteral=FromDouble

ref=DoubleRef
ref_array=DoubleArrayRef

range=DoubleRange
range_array=toDoubleArray

mapper=DoubleUnaryOperator
mapper_apply=applyAsDouble

flatMapper=DoubleFunction<double[]>
flatMapper_apply=applyAsDouble

predicate=DoublePredicate
predicate_test=test

supplier=DoubleSupplier
supplier_get=getAsDouble

consumer=DoubleConsumer
consumer_accept=accept

