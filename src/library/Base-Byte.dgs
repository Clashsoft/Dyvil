type=Byte
primitive=byte
wrapper=Byte

loadInsn=BALOAD
storeInsn=BASTORE

fromLiteral=FromInt

mapper=IntUnaryOperator
mapper_apply=applyAsInt

flatMapper=IntFunction<byte[]>
flatMapper_apply=applyAsInt

predicate=IntPredicate
predicate.test=test

supplier=IntSupplier
supplier_get=getAsInt

consumer=IntConsumer
consumer_accept=accept

