package dyvil.string

class CharUtils
{
	postfix func isAsciiDigit(_ c: char) -> boolean = c >= '0' && c <= '9'

	postfix func isDigit(_ c: char) -> boolean = c <= 127 ? c.isAsciiDigit() : Character.isDigit(c)

	postfix func isAsciiLetter(_ c: char) -> boolean = c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z'

	postfix func isLetter(_ c: char) -> boolean = c <= 127 ? c.isAsciiLetter() : Character.isLetter(c)

	postfix func isWhitespace(_ c: char) -> boolean
	{
		if (c <= 127) return c >= 0x9 && c <= 0xD || c >= 0x1C && c <= 0x20
		return Character.isWhitespace(c)
	}

	postfix func isLowerCase(_ c: char) -> boolean = c <= 127 ? (c >= 'a' && c <= 'z') : Character.isLowerCase(c)

	postfix func isUpperCase(_ c: char) -> boolean = c <= 127 ? (c >= 'A' && c <= 'Z') : Character.isUpperCase(c)

	postfix func toLowerCase(_ c: char) -> char
	{
		if (c >= 'A' && c <= 'Z') return (c + 32) as char
		if (c < 128) return c
		return Character.toLowerCase(c)
	}

	postfix func toUpperCase(_ c: char) -> char
	{
		if (c >= 'a' && c <= 'z') return (c - 32) as char
		if (c < 128) return c
		return Character.toUpperCase(c)
	}
}
