package dyvil

// Base imports for primitive types
import	dyvil.lang._
import	java.lang._

// Useful classes
import	dyvil.collection._
import	dyvil.io.Console
import	dyvil.random.Random
import	dyvil.function.PartialFunction
import	dyvil.util.{ Option, None, Some }

// Import Function1, Tuple2 and Tuple3 with more user-friendly names
import	dyvil.function.Function1 => Function
import	dyvil.tuple.Tuple2 => Tuple
import	dyvil.tuple.Tuple2 => Pair
import	dyvil.tuple.Tuple3 => Triple

// Import the methods from Predef
using	dyvil.lang.Predef._

// Prefix Operators
prefix operator +
prefix operator -
prefix operator ~
prefix operator !

// Boolean and Bitwise Operators
infix operator || { left, 10 }
infix operator && { left, 20 }
infix operator | { left, 30 }
infix operator ^ { left, 40 }
infix operator & { left, 50 }

// Equality and Identity Operators
infix operator == { left, 60Â }
infix operator != { left, 60 }
infix operator === { left, 60 }
infix operator !== { left, 60 }

// Numeric Comparison Operators
infix operator < { left, 70 }
infix operator <= { left, 70 }
infix operator > { left, 70 }
infix operator >= { left, 70 }

// Additive Operators
infix operator + { left, 80 }
infix operator - { left, 80 }

// Multiplicative Operators
infix operator * { left, 90 }
infix operator / { left, 90 }
infix operator \ { left, 90 }
infix operator % { left, 90 }

// Shift Operators
infix operator <<  { none, 100 }
infix operator >>  { none, 100 }
infix operator >>> { none, 100 }

// Arrow Operators
infix operator -> { left, 200 }
infix operator <- { right, 200 }

// Range Operator
infix operator ..  { none, 300 }
// infix operator ..< { none, 300 }
// infix operator >.. { none, 300 }
// infix operator >.< { none, 300 }

infix operator :=: { none, 1000 }
