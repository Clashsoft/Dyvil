package dyvil.collection.range

public interface Rangeable<type SELF: Rangeable<SELF>> extends Comparable<SELF>
{
	func next() -> SELF

	func prev() -> SELF

	func distanceTo(other: SELF) -> int

	override func compareTo(other: SELF) -> int

	override func equals(other: Object!) -> boolean

	override func hashCode() -> int

	infix inline func .. <T: Rangeable>(T from, T to) -> Range<T> = Range(from, to: to)

	infix inline func ..< <T: Rangeable>(T from, T to) -> Range<T> = Range(from, toExclusive: to)
}
