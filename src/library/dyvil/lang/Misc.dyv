package dyvil.lang

import const dyvil.reflect.Opcodes._
import func java.lang.System.{
	currentTimeMillis => milliTime
	nanoTime
}

@Experimental
final class Misc
{
	private init() {}

	// Blackhole

	@Intrinsic([ LOAD_0, AUTO_POP ])
	static func consume(value: any) -> void {}

	// Timing

	static inline func measureMillis(f: -> void) -> long = milliTime().{ f(); milliTime() - $0 }

	static inline func measureNanos(f: -> void) -> long = nanoTime().{ f(); nanoTime() - $0 }

	static inline func milliTimed<R>(f: -> R) -> (R, long) = milliTime().{ (f(), milliTime - $0) }

	static inline func nanoTimed<R>(f: -> R) -> (R, long) = nanoTime.{ (f(), nanoTime - $0) }
}
