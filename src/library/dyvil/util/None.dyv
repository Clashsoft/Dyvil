package dyvil.util

import java.util.NoSuchElementException

@LiteralConvertible.FromNil
public object None implements Option<none>
{
	static func apply() -> None = None

	// Accessors

	override func get() -> none = throw new NoSuchElementException

	override func isPresent() -> boolean = false

	override func forEach(none -> void consumer) -> void {}

	override func filter(none -> boolean predicate) -> Option<none> = None

	override func map<U>(none -> U function) -> Option<U> = None

	override func flatMap<U>(none -> Option<U> function) -> Option<U> = None

	@OverloadPriority
	public func orElse<U>(U value) -> U = value

	override func orElse<U>(-> U supplier) -> U = supplier()
}
