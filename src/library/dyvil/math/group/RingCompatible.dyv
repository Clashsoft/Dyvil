package dyvil.math.group

interface RingCompatible<type T: RingCompatible<T>> {
	// Constants

	static var _0: T { get }

	static var _1: T { get }

	// Unary Operators

	prefix func +(rhs: T) -> T = rhs

	prefix func -(rhs: T) -> T // = _0 - rhs

	postfix func inverse(lhs: T) -> T // = _1 / lhs

	// Additive Operators

	infix func +(lhs: T, rhs: T) -> T

	infix func -(lhs: T, rhs: T) -> T // = lhs + -rhs

	// Multiplicative Operators

	infix func *(lhs: T, rhs: T) -> T

	infix func /(lhs: T, rhs: T) -> T // = lhs * rhs.inverse

	infix func **(lhs: T, rhs: int) -> T
}
