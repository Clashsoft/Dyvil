package dyvil.math.group

interface GroupAdd<T> {
	abstract var _0: T { get }

	abstract func add(lhs: T, rhs: T) -> T

	implicit static func of<@Reified(.ANY_CLASS) type R: RingCompatible<R>>() -> GroupAdd<R> = new GroupAdd<R>() {
		override var _0: R { get: R._0 }

		override func add(lhs: R, rhs: R) -> R = R.`+`(lhs, rhs)
	}
}
