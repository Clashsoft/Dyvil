// GEN_NOTICE
// Timestamp: TIME_STAMP

package dyvil.array

public abstract class PrimitiveObjectArray
{
	init()
	{
		// no instances from outside this package
	}

#import Base.dgs
#foreach PRIMITIVE_SPECS

	// TYPE_NAME wrapper array methods

	infix func flatten([[PRIMITIVE]] array) -> [PRIMITIVE]
	{
		// Compute the size of the resulting array
		var size = 0
		for (nested <- array)
		{
			size += nested.size
		}

		// Construct and fill the array
		let res = new [PRIMITIVE](size)
		var index = 0

		for (nested <- array)
		{
			let nestedSize = nested.size
			System.arraycopy(nested, 0, res, index, nestedSize)
			index += nestedSize
		}

		return res
	}

	infix func unboxed([WRAPPER] array) -> [PRIMITIVE]
	{
		let size = array.size
		let unboxed = new [PRIMITIVE](size)
		for (i <- 0 ..< size) unboxed[i] = array[i]
		return unboxed
	}
#endfor
}
