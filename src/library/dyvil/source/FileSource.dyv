package dyvil.source

using dyvil.io.Files.readText

import java.io.File
import java.io.IOException

case class FileSource(
	protected let file: File { @JavaName("file") public get }
) implements Source {
	// =============== Properties ===============

	private var _textSource: TextSource! = null

	private var textSource: TextSource { get {
		if let textSource = this._textSource {
			return textSource
		}
		throw new RuntimeException('FileSource not yet loaded')
	}}

	override var filePath: String { get: this.file.getPath }

	override var lineCount: int { @JavaName("lineCount") get: this.textSource.lineCount }

	override var text: String { @JavaName("text") get: this.textSource.text }

	// =============== Methods ===============

	override func line(at index: int) -> String = this.textSource.line(at: index)

	func load() -> void throws IOException {
		this._textSource = new TextSource(this.file.readText())
	}
}
