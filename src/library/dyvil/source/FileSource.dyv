package dyvil.source

import java.io.{ File, IOException }
using dyvil.io.Files.readText

case class FileSource(protected let file: File { @JavaName("file") public get }) implements Source
{
	private var textSource: TextSource! = null

	func load() -> void throws IOException
	{
		this.textSource = new TextSource(this.file.readText())
	}

	private func getTextSource() -> TextSource
	{
		if let textSource = this.textSource { return textSource }
		throw new RuntimeException('FileSource not yet loaded')
	}

	override var lineCount: int { @JavaName("lineCount") get: this.getTextSource().lineCount }

	override var text: String { @JavaName("text") get: this.getTextSource().text }

	override func line(at index: int) -> String = this.getTextSource().line(at: index)
}
