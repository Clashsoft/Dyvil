type=Int
primitive=int
wrapper=Integer

loadInsn=IALOAD
storeInsn=IASTORE

fromLiteral=FromInt

ref=IntRef
ref_array=IntArrayRef

range=IntRange
range_array=toIntArray

mapper=IntUnaryOperator
mapper_apply=applyAsInt

flatMapper=IntFunction<int[]>
flatMapper_apply=applyAsInt

predicate=IntPredicate
predicate.test=test

supplier=IntSupplier
supplier_get=getAsInt

consumer=IntConsumer
consumer_accept=accept
