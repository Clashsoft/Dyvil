type=Char
primitive=char
wrapper=Character

loadInsn=CALOAD
storeInsn=CASTORE

fromLiteral=FromChar

ref=CharRef
ref_array=CharArrayRef

mapper=IntUnaryOperator
mapper_apply=applyAsInt

flatMapper=IntFunction<char[]>
flatMapper_apply=applyAsInt

predicate=IntPredicate
predicate.test=test

supplier=IntSupplier
supplier_get=getAsInt

consumer=IntConsumer
consumer_accept=accept

