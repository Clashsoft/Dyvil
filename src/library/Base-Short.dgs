type=Short
primitive=short
wrapper=Short

loadInsn=SALOAD
storeInsn=SASTORE

fromLiteral=FromInt

mapper=IntUnaryOperator
mapper_apply=applyAsInt

flatMapper=IntFunction<short[]>
flatMapper_apply=applyAsInt

predicate=IntPredicate
predicate.test=test

supplier=IntSupplier
supplier_get=getAsInt

consumer=IntConsumer
consumer_accept=accept

