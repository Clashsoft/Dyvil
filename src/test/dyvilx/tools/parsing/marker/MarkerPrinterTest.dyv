package dyvilx.tools.parsing.marker

using dyvil.test.JUnit
import dyvil.source.position.SourcePosition

import dyvil.util.MarkerLevel

class MarkerPrinterTest {
	@Test func print() -> void {
		let source = new dyvil.source.TextSource("example \nsource \nfile")
		let markers = new MarkerList()
		let marker = new Marker(SourcePosition(line: 1, startColumn: 1, endColumn: 5), .ERROR, "test")
		marker.add("info")
		markers.add(marker)
		markers.add(new Marker(SourcePosition(line: 3, startColumn: 0, endColumn: 1), .WARNING, "test 2"))

		let builder = new StringBuilder

		MarkerPrinter(source, style: .HUMAN, colors: true).print(markers, into: new dyvil.io.StringBuilderWriter(builder))

		let result = builder.toString()

		// uses \(' ') in place of whitespace at the end of a line
		result =?= "1 | example\(' ')
					. |  \(Console.ANSI_RED)^^^^\(Console.ANSI_RESET)
					. | \(Console.ANSI_RED)error: test\(Console.ANSI_RESET)
					. | \tinfo
					. |\(' ')
					3 | file
					. | \(Console.ANSI_YELLOW)^\(Console.ANSI_RESET)
					. | \(Console.ANSI_YELLOW)warning: test 2\(Console.ANSI_RESET)
					. |\(' ')
		"
	}
}
