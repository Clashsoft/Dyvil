package dyvil.tests

import dyvil.Test

public class OptionalTest
{
	static func apply() -> Test = test "Optionals" {
		let optString = Optional("abc")

		test "Null Coalescing" {
			let string = optString ?? "def" // = "abc"

			test "With Optional Chain" {
				string.staticType.toString =?= "java.lang.String"

				let optUppercase = optString?.toUpperCase ?? null
				// = optString == null ? null : optString!!.toUpperCase

				optUppercase =?= "ABC"
			}

			test "With Subscript" {
				let optUppercaseFirst = optString?.toUpperCase? [0] ?? 0

				optUppercaseFirst =?= 65
			}

			test "With non-OptionalChainAware lhs" {
				let a = (null as String?) ?? "a"

				a =?= "a"
			}
		}

		test "Optional Binding" {
			let opt = Optional "ABC"

			if let abc = opt { } else { fail }
			if (let abc = opt; !a.isEmpty) { } else { fail }
			if (let abc = opt, let a = a.substring(0, 1)) { a =?= "A" } else { fail }

			let s = Optional "a"
			if let s = s { s.staticType.toString =?= "java.lang.String" } else { fail }
		}
	}
}
