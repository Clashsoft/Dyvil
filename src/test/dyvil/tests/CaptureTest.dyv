package dyvil.tests

using dyvil.Test

public class CaptureTest
{
	static func apply() -> Test = test "Capture" {
		lambdaCapture()
		anonClassCapture()
	}
	
	private static func lambdaCapture() -> Test = test "Lambda" {
		var abc = -1
		var fun = (int i) => (int j) => (int k) => (i, j, k, abc)
		var res = fun 1 2 3

		res =?= (1, 2, 3, -1)

		lambdaThisCapture()
	}
	
	class ThisCapture
	{
		public Object anonymous() = new Object {
			override func toString() -> String = this<ThisCapture>.toString
		}
		
		public func lambda() -> -> ThisCapture = => this

		override func toString() -> String = System.identityHashCode(this).toHexString
	}
	
	private static func lambdaThisCapture() -> Test = test "This Capture" {
		let instance = new ThisCapture
		let lambda = instance.lambda

		lambda() =?= instance
	}
	
	private static func anonClassCapture() -> Test = test "Anonymous Classes" {
		var abc = 123
		var obj = new Object {
			public override String toString() = abc.toString
		}

		obj.toString =?= abc.toString

		anonClassThisCapture()
	}
	
	private static func anonClassThisCapture() -> Test = test "This Capture" {
		var instance = new ThisCapture
		var obj = instance.anonymous

		instance.toString =?= obj.toString
	}
}
