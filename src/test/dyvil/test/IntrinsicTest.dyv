package dyvil.test

import	dyvil.annotation.Intrinsic
using	dyvil.reflect.Opcodes._

/**
 * A test for annotations and intrinsic methods
 */
public class IntrinsicTest
{
	private static int value

	public static void main([String] args)
	{
		auto i1 = 1 +- 2
		auto i2 = 2 +- 4
		auto i3 = -1 +- 3
		auto i4 = -7 +- 5

		Main.test("Intrinsic Test 1", -1, i1)
		Main.test("Intrinsic Test 2", -2, i2)
		Main.test("Intrinsic Test 3", -4, i3)
		Main.test("Intrinsic Test 4", -12, i4)
		
		setValue 1
		setValue 7

		Main.test("Special Intrinsic Test", 7, value)
	}
	
	@Intrinsic([ LOAD_0, LOAD_1, INEG, IADD ])
	public infix int +-(int i, int j) = throw new RuntimeException("Not Intrinsic!")
	
	@Intrinsic(value: [ LOAD_0, PUTSTATIC, 0, 1, 2 ], strings: [ "dyvil/test/IntrinsicTest", "value", "I" ])
	private static void setValue(int value) = throw new RuntimeException("Not Intrinsic!")
}
