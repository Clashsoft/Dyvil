package dyvil.test

import org.junit.Test
import org.junit.Assert
import static org.junit.Assert._
import static org.hamcrest.core.IsEqual.equalTo
import static org.hamcrest.core.IsNot.not
import static org.hamcrest.core.IsInstanceOf.instanceOf

public header JUnit

infix operator =?= { associativity none, precedence 1 }
infix operator =!= { associativity none, precedence 1 }

@JavaName("JUnit")
extension any {
	// =============== Operators ===============

	infix func =?=(actual: any!, expected: any!) -> void = actual.shouldEqual(expected)

	infix func =!=(actual: any!, expected: any!) -> void = actual.shouldNotEqual(expected)

	// =============== Static Methods ===============

	static func pass() -> void {}

	static func fail() -> void = Assert.fail()

	// =============== Methods ===============

	final func shouldBe<@Reified(.OBJECT_CLASS) type T>() -> void = assertThat(this, instanceOf<T>(class T))

	final func shouldEqual(expected: any!) -> void = assertThat(this, equalTo(expected))

	final func shouldNotEqual(notExpected: any!) -> void = assertThat(this, not(notExpected))
}
