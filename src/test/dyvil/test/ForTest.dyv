package dyvil.test

import java.util.Iterator

public class ForTest
{
	public static void main([String] args)
	{
		testIterative()
		testArray()
		testIterable()
		testIterator()
		testString()
		testNested()
	}
	
	private static void testIterative()
	{
		[int] array = []

		for (int i = 0; i < 3; i++)
		{
			array += i
		}

		[int] expected = [ 0, 1, 2 ]
		Main.test("Iterative For Test", expected, array, expected == array)
	}
	
	private static void testArray()
	{
		[int] ints = [ 1, 2, 3 ]
		[int] array = []

		for (var i <- ints)
		{
			array += i
		}

		Main.test("Array For Test", ints, array, ints == array)
	}
	
	private static void testIterable()
	{
		[int] ints = [ 1, 2, 3 ]
		Iterable[int] iterable = ints.toIterable
		[int] array = []

		for (var i <- iterable)
		{
			array += i
		}

		Main.test("Iterable For Test", ints, array, ints == array)
	}

	private static void testIterator()
	{
		[int] ints = [ 1, 2, 3 ]
		Iterator[int] iterator = ints.toIterable.iterator
		[int] array = []

		for (var i <- iterator)
		{
			array += i
		}

		Main.test("Iterator For Test", ints, array, ints == array)
	}
	
	private static void testString()
	{
		var testString = "abc"
		var string = ""

		for (var c <- testString)
		{
			string += c
		}

		Main.test("String For Test", testString, string)
	}

	private static void testNested()
	{
		var results = List.[(int, int)]()

		for (var i <- 0 .. 1)
		{
			for (var j <- 0 .. 1)
			{
				results.add((i, j))
			}
		}

		Main.test("Nested Range For Test", [ (0, 0), (0, 1), (1, 0), (1, 1) ] as List, results)
	}
}
