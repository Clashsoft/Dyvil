package dyvil.test

import java.util.Iterator
using dyvil.Collections

public class ForTest
{
	public static void main([String] args)
	{
		testIterative()
		testArray()
		testIterable()
		testIterator()
		testString()
		testNested()
	}
	
	private static void testIterative()
	{
		let list = List<int>

		for (int i = 0; i < 3; i++)
		{
			list += i
		}

		Main.test("Iterative For Test", List(0, 1, 2), list)
	}
	
	private static void testArray()
	{
		let ints = [ 1, 2, 3 ]
		let list = List<int>

		for (var i <- ints)
		{
			list += i
		}

		Main.test("Array For Test", List(1, 2, 3), list)
	}
	
	private static void testIterable()
	{
		let ints = [ 1, 2, 3 ]
		let iterable = ints.asIterable
		let list = List<int>

		for (var i <- iterable)
		{
			list += i
		}

		Main.test("Iterable For Test", List(1, 2, 3), list)
	}

	private static void testIterator()
	{
		let ints = [ 1, 2, 3 ]
		let iterator = ints.asIterable.iterator
		let list = List<int>

		for (var i <- iterator)
		{
			list += i
		}

		Main.test("Iterator For Test", List(1, 2, 3), list)
	}
	
	private static void testString()
	{
		var testString = "abc"
		var string = ""

		for (var c <- testString)
		{
			string += c
		}

		Main.test("String For Test", testString, string)
	}

	private static void testNested()
	{
		let results = List<(int, int)>

		for (var i <- 0 .. 1)
		{
			for (var j <- 0 .. 1)
			{
				results += (i, j)
			}
		}

		Main.test("Nested Range For Test", List((0, 0), (0, 1), (1, 0), (1, 1)), results)
	}
}
