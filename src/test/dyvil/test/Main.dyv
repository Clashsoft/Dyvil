package dyvil.test

public class Main
{
	private static var errors = List<String>

	public static void main([String] args)
	{
		runTests(args)
		verify()
	}	
		
	private static void runTests([String] args)
	{
		AnnotationTest.main(args)
		AssignmentTest.main(args)
		ArrayTest.main(args)
		BridgeTest.main(args)
		BuilderTest.main(args)
		CaptureTest.main(args)
		CaseClassTest.main(args)
		ConstructorTest.main(args)
		DPFTest.main(args)
		ExtensionTest.main(args)
		ForTest.main(args)
		HanoiTest.main(args)
		InheritanceTest.main(args)
		IntrinsicTest.main(args)
		LambdaTest.main(args)
		MatchTest.main(args)
		MathTest.main(args)
		NestedMethodTest.main(args)
		FibonacciTest.main(args)
		ObjectTest.main(args)
		OperatorTest.main(args)
		OverloadTest.main(args)
		PrimitiveTest.main(args)
		PropertyTest.main(args)
		RangeTest.main(args)
		ReferenceTest.main(args)
		ReifyTest.main(args)
		SortTest.main(args)
		TypeTest.main(args)
		VarargsTest.main(args)
	}

	private static void verify()
	{
		if (errors.isEmpty)
		{
			return
		}

		errors.forEach(println _)
		throw new AssertionError()
	}

	public static void error(String message)
	{
		errors.add message
	}

	public static void test(String testName, any expected, any actual)
	{
		test(testName, expected, actual, expected == actual)
	}

	public static void test(String testName, any expected, any actual, boolean condition)
	{
		if (!condition)
		{
			errors.add "\(testName) FAILED:\n\texpected: \(expected)\n\tactual:   \(actual)"
		}
	}

	public static void test(String testName, boolean condition)
	{
		if (!condition)
		{
			errors.add "\(testName) FAILED"
		}
	}
}
