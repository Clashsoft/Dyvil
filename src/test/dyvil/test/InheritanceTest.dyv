package dyvil.test

public class InheritanceTest
{
	trait IFoo[T]
	{
		T foo()

		void onFooInit()

		init { this.onFooInit }
	}
	
	trait IBar[T]
	{
		T bar()

		void onBarInit()

		init { this.onBarInit }
	}
	
	interface IFooBar[T] extends IFoo[T], IBar[T]
	
	class FooBar implements IFooBar[String]
	{
		public override String foo() = "FooBar.foo"
		public override String bar() = "FooBar.bar"

		public override void onFooInit() {}
		public override void onBarInit() {}
	}
	
	class FooFoo implements IFoo[Object]
	{
		public boolean fooInit

		public override Object foo() = "FooFoo.foo"

		public override void onFooInit() = this.fooInit = true
	}
	
	public static void main([String] args)
	{
		var ff = new FooFoo()
		var fb = new FooBar()

		Main.test("Simple Interface Test", ff.foo, "FooFoo.foo")
		Main.test("Double-Layer Interface Test", fb.foo, "FooBar.foo")
		Main.test("Trait Initialization Test", ff.fooInit)
	}
}
