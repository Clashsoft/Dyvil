package dyvil.test

type IntArrayTuple = ([int], [int])

public class VarargsTest
{
	public static final void main([String] args)
	{
		singleTest()
		multipleTest()
	}

	private static [int] single(int... args) = args

	private static IntArrayTuple multiple(int... i, int... j) = (i, j)

	private infix func ==(IntArrayTuple tuple1, IntArrayTuple tuple2): boolean = tuple1._1 == tuple2._1 && tuple1._2 == tuple2._2

	private static String toString(IntArrayTuple tuple) = "(" + tuple._1 + ", " + tuple._2 + ")"

	private static void singleTest()
	{
		var expected = [ 1, 2, 3 ]
		var actual = single(1, 2, 3)
		Main.test("Single Varargs Test (Argument List)", expected.toString, actual.toString, expected == actual)

		actual = single(args: 1, 2, 3)
		Main.test("Single Varargs Test (Named Arguments)", expected.toString, actual.toString, expected == actual)

		expected = [ 1 ]
		actual = single 1
		Main.test("Single Varargs Test (Single Argument)", expected.toString, actual.toString, expected == actual)

		expected = []
		actual = single()
		Main.test("Single Varargs Test (Empty Arguments)", expected.toString, actual.toString, expected == actual)
	}

	private static void multipleTest()
	{
		var expected: IntArrayTuple = ([ 1, 2, 3], [])
		var actual = multiple(1, 2, 3)
		Main.test("Multiple Varargs Test (Argument List)", toString(expected), toString(actual), expected == actual)

		expected = ([ 1, 2, 3 ], [ 4, 5, 6 ])
		actual = multiple(i: 1, 2, 3, j: 4, 5, 6)
		Main.test("Multiple Varargs Test (Named Arguments)", toString(expected), toString(actual), expected == actual)

		expected = ([ 1 ], [])
		actual = multiple 1
		Main.test("Multiple Varargs Test (Single Argument)", toString(expected), toString(actual), expected == actual)

		expected = ([], [])
		actual = multiple()
		Main.test("Single Varargs Test (Empty Arguments)", toString(expected), toString(actual), expected == actual)
	}
}
