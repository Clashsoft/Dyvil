package dyvil.test

public class MatchTest
{
	public static void main([String] args)
	{
		table()
		tableHoles()
		lookup()
		stringTable()
		stringLookup
		// stringCollision()
		expression()
	}
	
	private static void table()
	{
		String value = _

		1 match {
			case 0: value = "zero"
			case 1: value = "one"
			case 2: value = "two"
			case _ : value = "something else"
		};

		Main.test("Match -> TableSwitch", "one", value)
	}
	
	private static void tableHoles()
	{
		String value = _

		2 match {
			case 0: value = "null"
			case 1: value = "one"
			case 2: value = "two"
			case 5: value = "five"
			case 6: value = "six"
		};

		Main.test("Match -> TableSwitch (with holes)", "two", value)
	}
	
	private static void lookup()
	{
		String value = _

		10 match {
			case 1: value = "1"
			case 10: value = "10"
			case 100: value = "100"
			case _ : value = "something else"
		};

		Main.test("Match -> LookupSwitch", "10", value)
	}

	private static void stringTable()
	{
		String value = _

		"a" match {
			case "a" : value = "A"
			case "b": value = "B"
			case "c": value = "C"
			case _ : value = "..."
		};

		Main.test("Match String -> TableSwitch", "A", value)
	}
	
	private static void stringLookup()
	{
		String value = _

		"abc" match {
			case "abc": value = "ABC"
			case "def": value = "DEF"
			case _ : value = "..."
		};
		
		Main.test("Match String -> LookupSwitch", "ABC", value)
	}
	
	private static void stringCollision()
	{
		/* "BBBB" match {
			case "AaAa": println "1"
			case "AaBB": println "2"
			case "BBAa": println "3"
			case "BBBB": println "4"
			case _ :
		}*/
	}
	
	private static void expression()
	{
		auto result = 10 match {
			case 0: "a"
			case 1: "b"
			case var x: x.toString
		}

		Main.test("Match Expression", "10", result)
	}
}	
