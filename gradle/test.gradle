import java.awt.Desktop

apply plugin: 'org.dyvil.dyvil-gradle'

// --------------- Dependencies ---------------

dependencies {
	compile subprojects

	// --------------- Test ---------------

	// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.12'

	testCompile project(':library')
}

// --------------- Test Tasks ---------------

tasks.named('compileTestDyvil') {
	// override classpath to use the new compiler instead of bootstrap
	dyvilcClasspath = project(':compiler').sourceSets.main.runtimeClasspath
}

tasks.named('compileTestDyvilGenSrc') {
	// override classpath to use the new classes instead of bootstrap
	dyvilcClasspath = project(':gensrc').sourceSets.main.runtimeClasspath
}

// --------------- REPL Tasks ---------------

tasks.register('runRepl', JavaExec) {
	group 'run'
	dependsOn ':testClasses', ':repl:classes'

	args '--ansi', '--classpath=' + sourceSets.test.runtimeClasspath.asPath

	jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'

	standardOutput = System.out
	standardInput = System.in

	main = project(':repl').mainClassName
	classpath = sourceSets.test.runtimeClasspath + project(':repl').sourceSets.main.runtimeClasspath
}

tasks.register('saveReplCommand') {
	File commandFile = new File('temp/repl.command')
	outputs.file commandFile

	doLast {
		JavaExec runRepl = tasks.runRepl as JavaExec
		String content = '#!/usr/bin/env bash\n' + runRepl.commandLine.join(' \\\n\t') + '\n'

		commandFile.text = content
		commandFile.executable = true
	}
}

tasks.register('runReplInTerminal') {
	dependsOn = tasks.runRepl.dependsOn
	dependsOn 'saveReplCommand'

	doLast {
		System.setProperty("apple.awt.UIElement", "true") // avoid dock icon
		Desktop.desktop.open(new File('temp/repl.command'))
	}
}
